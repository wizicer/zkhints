---
import Layout from "../layouts/Layout.astro";
import SectionHeading from "../components/SectionHeading.astro";
import { Content as CommitmentScheme } from "./commitment/commitment-scheme.md";
import { Content as PedersenCommitment } from "./commitment/pedersen-commitment.md";
import { Content as VectorCommitment } from "./commitment/vector-commitment.md";
import { Content as KZGCommitment } from "./commitment/kzg-commitment.md";
import Prose from "../components/Prose.astro";
---

<Layout id="commitment">
  <main class="container mx-auto px-4 py-8">
    <section class="mb-10">
      <SectionHeading title="Commitment Schemes" gradientPart="Commitment Schemes" />
      <div class="flex flex-col md:flex-row gap-6">
        <Prose class="md:w-3/5 max-w-none">
          <CommitmentScheme />
        </Prose>
        <div class="md:w-2/5 bg-gray-50 p-4 rounded-lg">
          <h3 class="text-lg font-semibold mb-2">Why Use Commitment Schemes?</h3>
          <ul class="space-y-2 list-disc pl-5">
            <li>Enable verification without revealing sensitive information</li>
            <li>Prevent participants from changing their inputs after seeing others' inputs</li>
            <li>Allow for deferred verification of claims</li>
            <li>Support for homomorphic operations on committed values</li>
          </ul>
          <p class="mt-4 text-sm text-gray-600">
            In blockchain and ZK applications, commitments allow for privacy-preserving verification
            of transactions and claims.
          </p>
        </div>
      </div>
    </section>

    <section class="mb-10">
      <SectionHeading title="Pedersen Commitment" gradientPart="Pedersen" />
      <div class="flex flex-col md:flex-row gap-6">
        <Prose class="md:w-3/5 max-w-none">
          <PedersenCommitment />
        </Prose>
        <div class="md:w-2/5">
          <div class="bg-white border border-gray-300 rounded-md p-4 my-4 sticky top-4">
            <h3 class="text-lg font-semibold mb-4">Interactive Pedersen Calculator</h3>
            <div class="grid grid-cols-1 gap-4">
              <div>
                <label for="pedersen-message" class="block text-sm font-medium text-gray-700"
                  >Message (m):</label
                >
                <input
                  type="number"
                  id="pedersen-message"
                  class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                  value="42"
                />
              </div>
              <div>
                <label for="pedersen-random" class="block text-sm font-medium text-gray-700"
                  >Random Value (r):</label
                >
                <input
                  type="number"
                  id="pedersen-random"
                  class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                  value="123"
                />
              </div>
            </div>
            <button
              id="pedersen-calculate"
              class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >Calculate Commitment</button
            >
            <div class="mt-4">
              <p class="text-sm font-medium text-gray-700">Commitment Result:</p>
              <div id="pedersen-result" class="mt-1 p-2 bg-gray-100 rounded-md overflow-x-auto">
              </div>
            </div>
            <div class="mt-4 text-sm text-gray-600">
              <p>This is a simplified implementation using:</p>
              <ul class="list-disc pl-5 mt-1">
                <li>Generator g = 7</li>
                <li>Generator h = 11</li>
                <li>Prime modulus p = 2147483647</li>
              </ul>
              <p class="mt-2">
                In real applications, these would be carefully chosen cryptographic parameters.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="mb-10">
      <SectionHeading title="Vector Commitment" gradientPart="Vector" />
      <div class="flex flex-col md:flex-row gap-6">
        <Prose class="md:w-3/5 max-w-none">
          <VectorCommitment />
        </Prose>
        <div class="md:w-2/5">
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="text-lg font-semibold mb-2">Vector Commitment Example</h3>
            <p class="text-sm">Consider a vector of 3 values: [5, 12, 7]</p>
            <div class="mt-4 bg-white p-3 rounded border">
              <p class="font-mono text-sm">
                g‚ÇÅ = 3, g‚ÇÇ = 5, g‚ÇÉ = 7<br />
                h = 11<br />
                r = 9<br /><br />
                Commit([5, 12, 7], 9) = 11‚Åπ ¬∑ 3‚Åµ ¬∑ 5¬π¬≤ ¬∑ 7‚Å∑<br />
                = 2,357,947,691 (mod p)
              </p>
            </div>
            <p class="mt-4 text-sm">
              To open just the second position (value 12), the prover would provide the value 12 and
              a proof that this value is indeed at position 2 in the committed vector.
            </p>
          </div>
        </div>
      </div>
    </section>

    <section class="mb-10">
      <SectionHeading title="KZG Polynomial Commitment" gradientPart="KZG" />
      <div class="flex flex-col md:flex-row gap-6">
        <Prose class="md:w-3/5 max-w-none">
          <KZGCommitment />
        </Prose>
        <div class="md:w-2/5">
          <div class="bg-white border border-gray-300 rounded-md p-4 my-4 sticky top-4">
            <h3 class="text-lg font-semibold mb-4">Interactive KZG Example</h3>
            <p class="text-sm text-gray-600 mb-4">
              Define a polynomial by entering its coefficients (from constant term to highest
              degree)
            </p>
            <div>
              <label for="kzg-poly" class="block text-sm font-medium text-gray-700"
                >Polynomial Coefficients (comma-separated):</label
              >
              <input
                type="text"
                id="kzg-poly"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                value="8,0,-2,5"
              />
            </div>
            <div class="mt-4">
              <label for="kzg-point" class="block text-sm font-medium text-gray-700"
                >Evaluation Point (z):</label
              >
              <input
                type="number"
                id="kzg-point"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                value="2"
              />
            </div>
            <button
              id="kzg-calculate"
              class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >Calculate KZG Proof</button
            >
            <div class="mt-4">
              <p class="text-sm font-medium text-gray-700">Polynomial:</p>
              <div id="kzg-polynomial" class="mt-1 p-2 bg-gray-100 rounded-md overflow-x-auto">
              </div>
            </div>
            <div class="mt-4">
              <p class="text-sm font-medium text-gray-700">Polynomial Evaluation:</p>
              <div id="kzg-eval" class="mt-1 p-2 bg-gray-100 rounded-md overflow-x-auto"></div>
            </div>
            <div class="mt-4">
              <p class="text-sm font-medium text-gray-700">Quotient Polynomial:</p>
              <div id="kzg-quotient" class="mt-1 p-2 bg-gray-100 rounded-md overflow-x-auto"></div>
            </div>
            <div class="mt-4 text-sm text-gray-600">
              <p>
                This example demonstrates the polynomial division that forms the basis of KZG
                proofs. In a real KZG implementation:
              </p>
              <ul class="list-disc pl-5 mt-1">
                <li>
                  The polynomial and quotient would be committed to using elliptic curve operations
                </li>
                <li>The verification would use bilinear pairings</li>
                <li>The proof would be a single group element</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="mb-10">
      <SectionHeading title="Applications in ZK Proofs" gradientPart="Applications" />
      <div class="flex flex-col md:flex-row gap-6">
        <div class="prose max-w-none md:w-3/5">
          <p>Commitment schemes are essential components in zero-knowledge proof systems:</p>
          <ul class="space-y-2 list-disc pl-5 mt-2">
            <li>
              <strong>üîí Plonk and Plonkish Protocols:</strong> Use KZG polynomial commitments to commit
              to witness polynomials. The efficiency of KZG commitments makes these protocols practical
              for complex circuits.
            </li>
            <li>
              <strong>üîç Bulletproofs:</strong> Use Pedersen commitments for range proofs and confidential
              transactions. The homomorphic properties of Pedersen commitments are crucial for the efficiency
              of Bulletproofs.
            </li>
            <li>
              <strong>‚ö° SNARKs:</strong> Various commitment schemes are used depending on the specific
              SNARK construction. Many modern SNARKs rely on polynomial commitments for efficiency.
            </li>
            <li>
              <strong>üîÑ Rollups:</strong> Layer 2 scaling solutions often use commitment schemes to
              compress transaction data while maintaining verifiability.
            </li>
          </ul>
          <p class="mt-4">
            The choice of commitment scheme affects the security, efficiency, and setup requirements
            of the ZK proof system. Different applications may prioritize different properties:
          </p>
          <ul class="space-y-1 list-disc pl-5 mt-2">
            <li><strong>Transparency:</strong> Some applications require no trusted setup</li>
            <li>
              <strong>Proof Size:</strong> Compact proofs are essential for blockchain applications
            </li>
            <li><strong>Verification Speed:</strong> Critical for on-chain verification</li>
            <li>
              <strong>Post-Quantum Security:</strong> Increasingly important for long-term security
            </li>
          </ul>
        </div>
        <div class="md:w-2/5">
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="text-lg font-semibold mb-2">Commitment Scheme Comparison</h3>
            <table class="min-w-full divide-y divide-gray-200 mt-4">
              <thead class="bg-gray-100">
                <tr>
                  <th
                    class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >Scheme</th
                  >
                  <th
                    class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >Proof Size</th
                  >
                  <th
                    class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >Setup</th
                  >
                  <th
                    class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >Security</th
                  >
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <tr>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Pedersen</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Constant</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">No</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">DL</td>
                </tr>
                <tr>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">KZG</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Constant</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Yes</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">q-SDH</td>
                </tr>
                <tr>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Merkle</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Logarithmic</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">No</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Hash</td>
                </tr>
                <tr>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">FRI</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Logarithmic</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">No</td>
                  <td class="px-3 py-2 whitespace-nowrap text-sm">Hash</td>
                </tr>
              </tbody>
            </table>
            <p class="mt-4 text-sm text-gray-600">
              DL = Discrete Logarithm, q-SDH = q-Strong Diffie-Hellman
            </p>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  import { init } from "../scripts/commitment.js";
  init();
</script>
