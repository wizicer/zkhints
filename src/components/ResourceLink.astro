---
import { Image } from "astro:assets";
import externalLinkIcon from "../assets/icons/external-link.svg";
import locationIcon from "../assets/icons/location.svg";
import calendarIcon from "../assets/icons/calendar.svg";
import type { EventLink, ResourceLink } from "../data/list";

export interface Props {
  link: ResourceLink | EventLink;
}

const { link } = Astro.props;

// Function to check if an event is outdated
function isOutdated(outdatedDate: string | undefined): boolean {
  if (!outdatedDate) return false;

  const today = new Date();
  today.setHours(0, 0, 0, 0); // Set to beginning of day

  const outdated = new Date(outdatedDate);
  outdated.setHours(0, 0, 0, 0); // Set to beginning of day

  return outdated < today;
}
---

{
  (() => {
    const isEvent = "outdated" in link;
    const outdated = isEvent && isOutdated(link.outdated);

    return !isEvent ? (
      <div
        class={`block p-4 bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow border-l-4 ${
          link.recommended ? "border-blue-500" : "border-gray-200"
        }`}
      >
        <h3 class={`font-bold mb-2`}>
          <a href={link.link} target="_blank" rel="noopener noreferrer" class="ml-1">
            {link.title}
            <Image src={externalLinkIcon} alt="External Link" class="h-4 w-4 inline mb-1" />
          </a>
          {link.recommended && (
            <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Recommended</span>
          )}
        </h3>
        <p class="text-sm text-gray-600">{link.description}</p>
        {link.seriesLinks && link.seriesLinks.length > 0 && (
          <div class="mt-3 pt-2 border-t border-gray-100">
            {/* Desktop view */}
            <div class="hidden md:block flex flex-wrap gap-2">
              {link.seriesLinks.map((seriesLink: any, index: number) => (
                <a
                  href={seriesLink.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="has-tooltip inline-block px-2 py-1 mx-1 text-xs font-medium text-gray-700 hover:text-blue-600 border-b-2 border-gray-200 hover:border-blue-500 transition-colors"
                >
                  {index + 1}
                  <span class="tooltip rounded shadow-lg py-1 px-3 border-1 border-gray-300 bg-gray-100 text-blue-500 -mt-8">
                    {seriesLink.title}
                  </span>
                </a>
              ))}
            </div>
            {/* Mobile view */}
            <div class="md:hidden block flex flex-wrap gap-2">
              {link.seriesLinks.map((seriesLink: any, index: number) => (
                <a
                  href={seriesLink.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center block px-2 py-1 text-xs font-medium text-gray-700 border-1 border-gray-200 rounded-md"
                >
                  <span class="mr-2 border-1 border-blue-200 rounded-md px-1">{index + 1}</span>
                  <span>{seriesLink.title}</span>
                </a>
              ))}
            </div>
          </div>
        )}
      </div>
    ) : (
      <div
        class={`block p-4 bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow border-l-4 ${
          outdated
            ? "border-gray-300 opacity-60"
            : link.recommended
              ? "border-blue-500"
              : "border-gray-200"
        }`}
      >
        <div class="flex justify-between items-start">
          <h3 class={`font-bold mb-2 ${outdated ? "text-gray-500" : "text-gray-800"}`}>
            {link.title}
            <a href={link.link} target="_blank" rel="noopener noreferrer" class="ml-1">
              <Image src={externalLinkIcon} alt="External Link" class="h-4 w-4 inline mb-1" />
            </a>
          </h3>
          <div>
            {link.recommended && !outdated && (
              <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Recommended</span>
            )}
            {outdated && (
              <span class="bg-gray-100 text-gray-600 text-xs px-2 py-1 rounded">Past event</span>
            )}
          </div>
        </div>
        <p class={`text-sm ${outdated ? "text-gray-400" : "text-gray-600"}`}>
          <a
            href={`https://www.google.com/maps/place/${link.location}`}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center inline"
          >
            <Image src={locationIcon} alt="Location" class="h-4 w-4 inline" />
            {link.location}
          </a>

          <br />
          <Image src={calendarIcon} alt="Calendar" class="h-4 w-4 inline" />
          {link.dateDescription}
        </p>
      </div>
    );
  })()
}
